1. Analise o código e tente identificar eventuais erros.
Fiquei bem confuso ao analisar sem as ferramentas e somente cheguei a uma conclusão após utizar o gdb, mas no código
há dois erros pois a variável rotation3D foi declarada duas vezes e a variável text, que nem é usada,
não é alocada mas é liberada nas linhas finais.

2. Utilizando as ferramentas, confirme a sua avaliação ou identifique problemas.
Utilizando o script com o gbd é retonado o erro:

Reading symbols from ./a.out...
(gdb) run
Starting program: /mnt/d/Códigos/C/Pratica3_ED/Felippe_Marinho_2021072260/a.out 

Program received signal SIGSEGV, Segmentation fault.
0x000055555555517a in main () at c4.c:13
13      rotation3D->rows=4;

Usando o valgrind é retornado o erro de Segmentation fault novamente, além de ser mais expositivo em relação aos erros
em alocação de memória.

==2903== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2903== Command: ./a.out
==2903==
==2903== Use of uninitialised value of size 8
==2903==    at 0x10917A: main (c4.c:13)
==2903==
==2903== Invalid write of size 4
==2903==    at 0x10917A: main (c4.c:13)
==2903==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2903==
==2903==
==2903== Process terminating with default action of signal 11 (SIGSEGV)
==2903==  Access not within mapped region at address 0x0
==2903==    at 0x10917A: main (c4.c:13)
==2903==  If you believe this happened as a result of a stack
==2903==  overflow in your program's main thread (unlikely but
==2903==  possible), you can try to increase the size of the
==2903==  main thread stack using the --main-stacksize= flag.
==2903==  The main thread stack size used in this run was 8388608.
==2903== 
==2903== HEAP SUMMARY:
==2903==     in use at exit: 0 bytes in 0 blocks
==2903==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2903==
==2903== All heap blocks were freed -- no leaks are possible
==2903==
==2903== Use --track-origins=yes to see where uninitialised values come from
==2903== For lists of detected and suppressed errors, rerun with: -s
==2903== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault

3. Corrija o código, removendo o(s) erro(s) identificado(s).
Removendo os comentários, é feito a alocação da Matrix*, sendo resolvido os erros realcionados a 
não alocação de algumas variáveis, além disso é comentada a liberação da variável text que não é alocada anteriormente.

4. Utilizando novamente as ferramentas, verifique a remoção do erro.
Os resultados das correções indicadas no  tópico 3 ficam visíveis após a execução do valgrind:

==2888== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2888== Command: ./a.out
==2888==
==2888== 
==2888== HEAP SUMMARY:
==2888==     in use at exit: 0 bytes in 0 blocks
==2888==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==2888==
==2888== All heap blocks were freed -- no leaks are possible
==2888==
==2888== For lists of detected and suppressed errors, rerun with: -s
==2888== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)